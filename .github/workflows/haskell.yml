name: Haskell CI

on: [push]

jobs:
  build-deps:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - name: Cache ~/.stack
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.stack
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-master-stack-global-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-stack-global-

    - name: Cache ~/.cabal
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.cabal
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-cabal

    - name: Cache ~/.ghc
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.ghc
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-ghc

    - name: Cache .stack-work
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: .stack-work
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-stack-work-
          ${{runner.os}}-master-stack-work-

    - name: Install Dependent Libraries
      run: |
        sudo apt-get update -y -qq
        echo "deb http://apt.llvm.org/focal llvm-toolchain-focal-9 main" | sudo tee -a /etc/apt/sources.list.d/llvm.list
        sudo apt-get install -y -qq wget libgmp3-dev libgsl0-dev liblapack-dev clang-9 llvm-9 llvm-9-dev libllvm9
    - name: Install dependencies
      run: |
        pwd
        ls
        stack --no-terminal build --test --no-run-tests --bench --no-run-benchmarks --only-dependencies

  build:
    needs:
    - build-deps
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1.1.6
      with:
        ghc-version: '8.10.4'
        cabal-version: '3.0'
        enable-stack: true
        stack-version: '2.5.1'

    - name: Cache ~/.stack
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.stack
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}-build
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
          ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-master-stack-global-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-stack-global-

    - name: Cache ~/.cabal
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.cabal
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-cabal

    - name: Cache ~/.ghc
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.ghc
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-ghc

    - name: Cache .stack-work
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: .stack-work
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}-build
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
          ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-stack-work-
          ${{runner.os}}-master-stack-work-


    - name: Install Dependent Libraries
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq wget libgmp3-dev libgsl0-dev liblapack-dev llvm-7-dev
    - name: Build
      run: |
        stack --no-terminal build --test --no-run-tests --bench --no-run-benchmarks

  test:
    needs:
    - build-deps
    - build
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1.1.6
      with:
        ghc-version: '8.10.4'
        cabal-version: '3.0'
        enable-stack: true
        stack-version: '2.5.1'

    - name: Cache ~/.stack
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.stack
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}-build
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
          ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-master-stack-global-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-stack-global-

    - name: Cache ~/.cabal
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.cabal
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-cabal

    - name: Cache ~/.ghc
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.ghc
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-ghc

    - name: Cache .stack-work
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: .stack-work
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}-build
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
          ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-stack-work-
          ${{runner.os}}-master-stack-work-

    - name: Install Dependent Libraries
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq wget libgmp3-dev libgsl0-dev liblapack-dev llvm-7-dev
    - name: Run tests
      run: stack --no-terminal build --test --bench --no-run-benchmarks

  bench:
    needs:
    - build-deps
    - build
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1.1.6
      with:
        ghc-version: '8.10.4'
        cabal-version: '3.0'
        enable-stack: true
        stack-version: '2.5.1'

    - name: Cache ~/.stack
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.stack
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}-build
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
          ${{runner.os}}-${{github.ref}}-stack-global-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-master-stack-global-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-stack-global-

    - name: Cache ~/.cabal
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.cabal
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-cabal-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-cabal

    - name: Cache ~/.ghc
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: ~/.ghc
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-ghc-${{ hashFiles('stack.yaml.lock') }}
          ${{runner.os}}-master-ghc

    - name: Cache .stack-work
      uses: actions/cache@v2
      with:
        # A directory to store and save the cache
        path: .stack-work
        # An explicit key for restoring and saving the cache
        key: ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}-build
        restore-keys: |
          ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-${{ github.sha }}
          ${{runner.os}}-${{github.ref}}-stack-work-${{ hashFiles('stack.yaml.lock') }}-
          ${{runner.os}}-${{github.ref}}-stack-work-
          ${{runner.os}}-master-stack-work-

    - name: Run Benchmarks
      run: |
        mkdir bench-results
        sudo lshw -class processor > bench-results/processors.txt
        cp /proc/cpuinfo bench-results
        cp /proc/meminfo bench-results
        stack bench smooth:bench:liftWeil-speed --ba "--csv=bench-results/liftWeil-speed.csv"
        stack bench smooth:bench:liftWeil-heap
        stack bench smooth:bench:diffupto-bench --ba "--csv=bench-results/diffupto.csv"
        stack bench smooth:bench:multdiffupto-bench --ba "--csv=bench-results/multdiffupto-speed.csv"
        stack bench smooth:bench:multdiffupto-heap
        stack bench smooth:bench:higher-diff-speed --ba "--csv=bench-results/higher-diff-speed.csv"
        stack bench smooth:bench:higher-diff-heap

    - name: Upload benchmark results
      uses: actions/upload-artifact@v2.2.1
      with:
        name: Benchmark Results
        path: bench-results
        if-no-files-found: error # optional, defaule is warn
        retention-days: 90
